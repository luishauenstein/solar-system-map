"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConjunctionInLongitude = exports.getConjunctionInRightAscension = void 0;
var planetTypes_1 = require("../planets/planetTypes");
var time_1 = require("../time");
var interpolationCalc_1 = require("./interpolationCalc");
function getConjunctionInRightAscension(obj1Constructor, obj2Constructor, jd0) {
    return __awaiter(this, void 0, void 0, function () {
        var raEphemerisObj1, raEphemerisObj2, raEphemerisDiff, n, decEphemerisObj1, decEphemerisObj2, decEphemerisDiff, declination;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, interpolationCalc_1.getRightAscensionInterpolationArray(obj1Constructor, jd0, 2)];
                case 1:
                    raEphemerisObj1 = _a.sent();
                    return [4, interpolationCalc_1.getRightAscensionInterpolationArray(obj2Constructor, jd0, 2)];
                case 2:
                    raEphemerisObj2 = _a.sent();
                    raEphemerisDiff = _getEphemerisDiff(raEphemerisObj1, raEphemerisObj2);
                    if (!_isConjunctionPossible(raEphemerisDiff)) {
                        throw new Error('No conjunction in right ascension possible for given objects at ' + jd0);
                    }
                    n = interpolationCalc_1.tabularInterpolation5(raEphemerisDiff);
                    return [4, interpolationCalc_1.getDeclinationInterpolationArray(obj1Constructor, jd0, 2)];
                case 3:
                    decEphemerisObj1 = _a.sent();
                    return [4, interpolationCalc_1.getDeclinationInterpolationArray(obj2Constructor, jd0, 2)];
                case 4:
                    decEphemerisObj2 = _a.sent();
                    decEphemerisDiff = _getEphemerisDiff(decEphemerisObj1, decEphemerisObj2);
                    declination = interpolationCalc_1.getInterpolateValue5(decEphemerisDiff, n);
                    return [2, {
                            toi: time_1.createTimeOfInterest.fromJulianDay(jd0 + n),
                            position: declination >= 0 ? planetTypes_1.Position.north : planetTypes_1.Position.south,
                            angularDistance: Math.abs(declination),
                        }];
            }
        });
    });
}
exports.getConjunctionInRightAscension = getConjunctionInRightAscension;
function getConjunctionInLongitude(obj1Constructor, obj2Constructor, jd0) {
    return __awaiter(this, void 0, void 0, function () {
        var lonEphemerisObj1, lonEphemerisObj2, lonEphemerisDiff, n, latEphemerisObj1, latEphemerisObj2, latEphemerisDiff, latitude;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, interpolationCalc_1.getLongitudeInterpolationArray(obj1Constructor, jd0, 2)];
                case 1:
                    lonEphemerisObj1 = _a.sent();
                    return [4, interpolationCalc_1.getLongitudeInterpolationArray(obj2Constructor, jd0, 2)];
                case 2:
                    lonEphemerisObj2 = _a.sent();
                    lonEphemerisDiff = _getEphemerisDiff(lonEphemerisObj1, lonEphemerisObj2);
                    if (!_isConjunctionPossible(lonEphemerisDiff)) {
                        throw new Error('No conjunction in longitude possible for given objects at ' + jd0);
                    }
                    n = interpolationCalc_1.tabularInterpolation5(lonEphemerisDiff);
                    return [4, interpolationCalc_1.getLatitudeInterpolationArray(obj1Constructor, jd0, 2)];
                case 3:
                    latEphemerisObj1 = _a.sent();
                    return [4, interpolationCalc_1.getLatitudeInterpolationArray(obj2Constructor, jd0, 2)];
                case 4:
                    latEphemerisObj2 = _a.sent();
                    latEphemerisDiff = _getEphemerisDiff(latEphemerisObj1, latEphemerisObj2);
                    latitude = interpolationCalc_1.getInterpolateValue5(latEphemerisDiff, n);
                    return [2, {
                            toi: time_1.createTimeOfInterest.fromJulianDay(jd0 + n),
                            position: latitude >= 0 ? planetTypes_1.Position.north : planetTypes_1.Position.south,
                            angularDistance: Math.abs(latitude),
                        }];
            }
        });
    });
}
exports.getConjunctionInLongitude = getConjunctionInLongitude;
function _isConjunctionPossible(diffArray) {
    var ra1 = diffArray[2];
    var ra2 = diffArray[3];
    return ra1 < 0 && ra2 >= 0 || ra1 >= 0 && ra2 < 0;
}
function _getEphemerisDiff(ephemeris1, ephemeris2) {
    return ephemeris1.map(function (value1, key) { return value1 - ephemeris2[key]; });
}
