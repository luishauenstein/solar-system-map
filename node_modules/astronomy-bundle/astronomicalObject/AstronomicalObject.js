"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var time_1 = require("../time");
var conjunctionCalc_1 = require("../utils/conjunctionCalc");
var coordinateCalc_1 = require("../utils/coordinateCalc");
var distanceCalc_1 = require("../utils/distanceCalc");
var lightSpeed_1 = require("../constants/lightSpeed");
var apparentCoordinateCalc_1 = require("../utils/apparentCoordinateCalc");
var AstronomicalObject = (function () {
    function AstronomicalObject(toi) {
        if (toi === void 0) { toi = time_1.createTimeOfInterest.fromCurrentTime(); }
        this.toi = toi;
        this.name = 'astronomical object';
        this.jd = 0.0;
        this.jd0 = 0.0;
        this.T = 0.0;
        this.t = 0.0;
        this.jd = toi.getJulianDay();
        this.jd0 = toi.getJulianDay0();
        this.T = toi.getJulianCenturiesJ2000();
        this.t = toi.getJulianMillenniaJ2000();
    }
    AstronomicalObject.prototype.getName = function () {
        return this.name;
    };
    AstronomicalObject.prototype.getGeocentricEquatorialSphericalJ2000Coordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalJ2000Coordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.eclipticSpherical2equatorialSpherical(coords, this.T)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getGeocentricEquatorialSphericalDateCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.eclipticSpherical2equatorialSpherical(coords, this.T)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getApparentGeocentricEclipticRectangularCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEclipticSphericalCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.spherical2rectangular(coords)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getApparentGeocentricEquatorialSphericalCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEclipticSphericalCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.eclipticSpherical2equatorialSpherical(coords, this.T)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getTopocentricEquatorialSphericalCoordinates = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.equatorialSpherical2topocentricSpherical(coords, location, this.T)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getTopocentricHorizontalCoordinates = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.equatorialSpherical2topocentricHorizontal(coords, location, this.T)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getApparentTopocentricHorizontalCoordinates = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, azimuth, altitude, radiusVector;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4, this.getTopocentricHorizontalCoordinates(location)];
                    case 1:
                        _a = _b.sent(), azimuth = _a.azimuth, altitude = _a.altitude, radiusVector = _a.radiusVector;
                        return [2, {
                                azimuth: azimuth,
                                altitude: apparentCoordinateCalc_1.correctEffectOfRefraction(altitude),
                                radiusVector: radiusVector,
                            }];
                }
            });
        });
    };
    AstronomicalObject.prototype.getDistanceToEarth = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, distanceCalc_1.au2km(coords.radiusVector)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getApparentDistanceToEarth = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEclipticSphericalCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, distanceCalc_1.au2km(coords.radiusVector)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getTopocentricDistanceToEarth = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricEquatorialSphericalCoordinates(location)];
                    case 1:
                        coords = _a.sent();
                        return [2, distanceCalc_1.au2km(coords.radiusVector)];
                }
            });
        });
    };
    AstronomicalObject.prototype.getLightTime = function () {
        return __awaiter(this, void 0, void 0, function () {
            var radiusVector;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        radiusVector = (_a.sent()).radiusVector;
                        return [2, distanceCalc_1.au2km(radiusVector) / lightSpeed_1.LIGHT_SPEED_KM_PER_SEC];
                }
            });
        });
    };
    AstronomicalObject.prototype.getConjunctionInRightAscensionTo = function (astronomicalObjectConstructor) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, conjunctionCalc_1.getConjunctionInRightAscension(this.constructor, astronomicalObjectConstructor, this.jd0)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    AstronomicalObject.prototype.getConjunctionInLongitudeTo = function (astronomicalObjectConstructor) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, conjunctionCalc_1.getConjunctionInLongitude(this.constructor, astronomicalObjectConstructor, this.jd0)];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    return AstronomicalObject;
}());
exports.default = AstronomicalObject;
