"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var AstronomicalObject_1 = require("../astronomicalObject/AstronomicalObject");
var moonPhase_1 = require("../constants/moonPhase");
var diameters_1 = require("../constants/diameters");
var magnitudeCalc_1 = require("../utils/magnitudeCalc");
var coordinateCalc_1 = require("../utils/coordinateCalc");
var apparentCoordinateCalc_1 = require("../utils/apparentCoordinateCalc");
var createSun_1 = require("../sun/createSun");
var createEarth_1 = require("../earth/createEarth");
var riseSetTransitCalc_1 = require("../utils/riseSetTransitCalc");
var time_1 = require("../time");
var standardAltitude_1 = require("../constants/standardAltitude");
var Moon = (function (_super) {
    __extends(Moon, _super);
    function Moon(toi) {
        var _this = _super.call(this, toi) || this;
        _this.name = 'moon';
        _this.sun = createSun_1.default(toi);
        _this.earth = createEarth_1.default(toi);
        return _this;
    }
    Moon.prototype.getHeliocentricEclipticRectangularJ2000Coordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getHeliocentricEclipticRectangularDateCoordinates()];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    Moon.prototype.getHeliocentricEclipticRectangularDateCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var geocentricCoords, heliocentricCoordsEarth;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticRectangularDateCoordinates()];
                    case 1:
                        geocentricCoords = _a.sent();
                        return [4, this.earth.getHeliocentricEclipticRectangularDateCoordinates()];
                    case 2:
                        heliocentricCoordsEarth = _a.sent();
                        return [2, coordinateCalc_1.rectangularGeocentric2rectangularHeliocentric(geocentricCoords, heliocentricCoordsEarth)];
                }
            });
        });
    };
    Moon.prototype.getHeliocentricEclipticSphericalJ2000Coordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getHeliocentricEclipticSphericalDateCoordinates()];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    Moon.prototype.getHeliocentricEclipticSphericalDateCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getHeliocentricEclipticRectangularDateCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.rectangular2spherical(coords)];
                }
            });
        });
    };
    Moon.prototype.getGeocentricEclipticRectangularJ2000Coordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticRectangularDateCoordinates()];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    Moon.prototype.getGeocentricEclipticRectangularDateCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, coordinateCalc_1.spherical2rectangular(coords)];
                }
            });
        });
    };
    Moon.prototype.getGeocentricEclipticSphericalJ2000Coordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 1: return [2, _a.sent()];
                }
            });
        });
    };
    Moon.prototype.getGeocentricEclipticSphericalDateCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var lon, lat, radiusVector;
            return __generator(this, function (_a) {
                lon = utils_1.moonCalc.getLongitude(this.T);
                lat = utils_1.moonCalc.getLatitude(this.T);
                radiusVector = utils_1.moonCalc.getRadiusVector(this.T);
                return [2, Promise.resolve({ lon: lon, lat: lat, radiusVector: radiusVector })];
            });
        });
    };
    Moon.prototype.getApparentGeocentricEclipticSphericalCoordinates = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coords;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        coords = _a.sent();
                        return [2, apparentCoordinateCalc_1.correctEffectOfNutation(coords, this.T)];
                }
            });
        });
    };
    Moon.prototype.getTransit = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var jd;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, riseSetTransitCalc_1.getTransit(this.constructor, location, this.jd0)];
                    case 1:
                        jd = _a.sent();
                        return [2, time_1.createTimeOfInterest.fromJulianDay(jd)];
                }
            });
        });
    };
    Moon.prototype.getRise = function (location, standardAltitude) {
        if (standardAltitude === void 0) { standardAltitude = standardAltitude_1.STANDARD_ALTITUDE_MOON_CENTER_REFRACTION; }
        return __awaiter(this, void 0, void 0, function () {
            var jd;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, riseSetTransitCalc_1.getRise(this.constructor, location, this.jd0, standardAltitude)];
                    case 1:
                        jd = _a.sent();
                        return [2, time_1.createTimeOfInterest.fromJulianDay(jd)];
                }
            });
        });
    };
    Moon.prototype.getSet = function (location, standardAltitude) {
        if (standardAltitude === void 0) { standardAltitude = standardAltitude_1.STANDARD_ALTITUDE_MOON_CENTER_REFRACTION; }
        return __awaiter(this, void 0, void 0, function () {
            var jd;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, riseSetTransitCalc_1.getSet(this.constructor, location, this.jd0, standardAltitude)];
                    case 1:
                        jd = _a.sent();
                        return [2, time_1.createTimeOfInterest.fromJulianDay(jd)];
                }
            });
        });
    };
    Moon.prototype.getAngularDiameter = function () {
        return __awaiter(this, void 0, void 0, function () {
            var distance;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentDistanceToEarth()];
                    case 1:
                        distance = _a.sent();
                        return [2, utils_1.observationCalc.getAngularDiameter(distance, diameters_1.DIAMETER_MOON)];
                }
            });
        });
    };
    Moon.prototype.getTopocentricAngularDiameter = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var distance;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricDistanceToEarth(location)];
                    case 1:
                        distance = _a.sent();
                        return [2, utils_1.observationCalc.getAngularDiameter(distance, diameters_1.DIAMETER_MOON)];
                }
            });
        });
    };
    Moon.prototype.getElongation = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coordsMoon, coordsSun;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 1:
                        coordsMoon = _a.sent();
                        return [4, this.sun.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 2:
                        coordsSun = _a.sent();
                        return [2, utils_1.observationCalc.getElongation(coordsMoon, coordsSun)];
                }
            });
        });
    };
    Moon.prototype.getTopocentricElongation = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coordsMoon, coordsSun;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricEquatorialSphericalCoordinates(location)];
                    case 1:
                        coordsMoon = _a.sent();
                        return [4, this.sun.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 2:
                        coordsSun = _a.sent();
                        return [2, utils_1.observationCalc.getElongation(coordsMoon, coordsSun)];
                }
            });
        });
    };
    Moon.prototype.getPhaseAngle = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coordsMoon, coordsSun;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 1:
                        coordsMoon = _a.sent();
                        return [4, this.sun.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 2:
                        coordsSun = _a.sent();
                        return [2, utils_1.observationCalc.getPhaseAngle(coordsMoon, coordsSun)];
                }
            });
        });
    };
    Moon.prototype.getTopocentricPhaseAngle = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coordsMoon, coordsSun;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricEquatorialSphericalCoordinates(location)];
                    case 1:
                        coordsMoon = _a.sent();
                        return [4, this.sun.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 2:
                        coordsSun = _a.sent();
                        return [2, utils_1.observationCalc.getPhaseAngle(coordsMoon, coordsSun)];
                }
            });
        });
    };
    Moon.prototype.getIlluminatedFraction = function () {
        return __awaiter(this, void 0, void 0, function () {
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getPhaseAngle()];
                    case 1:
                        i = _a.sent();
                        return [2, utils_1.observationCalc.getIlluminatedFraction(i)];
                }
            });
        });
    };
    Moon.prototype.getTopocentricIlluminatedFraction = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var i;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricPhaseAngle(location)];
                    case 1:
                        i = _a.sent();
                        return [2, utils_1.observationCalc.getIlluminatedFraction(i)];
                }
            });
        });
    };
    Moon.prototype.getPositionAngleOfBrightLimb = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coordsMoon, coordsSun;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 1:
                        coordsMoon = _a.sent();
                        return [4, this.sun.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 2:
                        coordsSun = _a.sent();
                        return [2, utils_1.observationCalc.getPositionAngleOfBrightLimb(coordsMoon, coordsSun)];
                }
            });
        });
    };
    Moon.prototype.getTopocentricPositionAngleOfBrightLimb = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coordsMoon, coordsSun;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricEquatorialSphericalCoordinates(location)];
                    case 1:
                        coordsMoon = _a.sent();
                        return [4, this.sun.getApparentGeocentricEquatorialSphericalCoordinates()];
                    case 2:
                        coordsSun = _a.sent();
                        return [2, utils_1.observationCalc.getPositionAngleOfBrightLimb(coordsMoon, coordsSun)];
                }
            });
        });
    };
    Moon.prototype.isWaxing = function () {
        return __awaiter(this, void 0, void 0, function () {
            var chi;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getPositionAngleOfBrightLimb()];
                    case 1:
                        chi = _a.sent();
                        return [2, utils_1.observationCalc.isWaxing(chi)];
                }
            });
        });
    };
    Moon.prototype.isTopocentricWaxing = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var chi;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getTopocentricPositionAngleOfBrightLimb(location)];
                    case 1:
                        chi = _a.sent();
                        return [2, utils_1.observationCalc.isWaxing(chi)];
                }
            });
        });
    };
    Moon.prototype.getApparentMagnitude = function () {
        return __awaiter(this, void 0, void 0, function () {
            var coordsHelio, coordsGeo, i, isWaxing;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getHeliocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        coordsHelio = _a.sent();
                        return [4, this.getGeocentricEclipticSphericalDateCoordinates()];
                    case 2:
                        coordsGeo = _a.sent();
                        return [4, this.getPhaseAngle()];
                    case 3:
                        i = _a.sent();
                        return [4, this.isWaxing()];
                    case 4:
                        isWaxing = _a.sent();
                        return [2, magnitudeCalc_1.getApparentMagnitudeMoon(coordsHelio.radiusVector, coordsGeo.radiusVector, i, isWaxing)];
                }
            });
        });
    };
    Moon.prototype.getTopocentricApparentMagnitude = function (location) {
        return __awaiter(this, void 0, void 0, function () {
            var coordsHelio, coordsGeo, i, isWaxing;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4, this.getHeliocentricEclipticSphericalDateCoordinates()];
                    case 1:
                        coordsHelio = _a.sent();
                        return [4, this.getTopocentricEquatorialSphericalCoordinates(location)];
                    case 2:
                        coordsGeo = _a.sent();
                        return [4, this.getTopocentricPhaseAngle(location)];
                    case 3:
                        i = _a.sent();
                        return [4, this.isTopocentricWaxing(location)];
                    case 4:
                        isWaxing = _a.sent();
                        return [2, magnitudeCalc_1.getApparentMagnitudeMoon(coordsHelio.radiusVector, coordsGeo.radiusVector, i, isWaxing)];
                }
            });
        });
    };
    Moon.prototype.getUpcomingNewMoon = function () {
        var decimalYear = this.toi.getDecimalYear();
        return utils_1.moonPhaseCalc.getTimeOfInterestOfUpcomingPhase(decimalYear, moonPhase_1.MOON_PHASE_NEW_MOON);
    };
    Moon.prototype.getUpcomingFirstQuarter = function () {
        var decimalYear = this.toi.getDecimalYear();
        return utils_1.moonPhaseCalc.getTimeOfInterestOfUpcomingPhase(decimalYear, moonPhase_1.MOON_PHASE_FIRST_QUARTER);
    };
    Moon.prototype.getUpcomingFullMoon = function () {
        var decimalYear = this.toi.getDecimalYear();
        return utils_1.moonPhaseCalc.getTimeOfInterestOfUpcomingPhase(decimalYear, moonPhase_1.MOON_PHASE_FULL_MOON);
    };
    Moon.prototype.getUpcomingLastQuarter = function () {
        var decimalYear = this.toi.getDecimalYear();
        return utils_1.moonPhaseCalc.getTimeOfInterestOfUpcomingPhase(decimalYear, moonPhase_1.MOON_PHASE_LAST_QUARTER);
    };
    return Moon;
}(AstronomicalObject_1.default));
exports.default = Moon;
