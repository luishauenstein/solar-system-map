"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.fromJulianCenturiesJ2000 = exports.fromJulianDay = exports.fromYearOfDay = exports.fromDate = exports.fromTime = exports.fromCurrentTime = void 0;
var utils_1 = require("../utils");
var TimeOfInterest_1 = require("./TimeOfInterest");
function default_1() {
    return fromCurrentTime();
}
exports.default = default_1;
function fromCurrentTime() {
    var date = new Date(Date.now());
    return new TimeOfInterest_1.default({
        year: date.getUTCFullYear(),
        month: date.getUTCMonth() + 1,
        day: date.getUTCDate(),
        hour: date.getUTCHours(),
        min: date.getUTCMinutes(),
        sec: date.getUTCSeconds(),
    });
}
exports.fromCurrentTime = fromCurrentTime;
function fromTime(year, month, day, hour, min, sec) {
    return new TimeOfInterest_1.default({ year: year, month: month, day: day, hour: hour, min: min, sec: sec });
}
exports.fromTime = fromTime;
function fromDate(date) {
    return new TimeOfInterest_1.default({
        year: date.getUTCFullYear(),
        month: date.getUTCMonth() + 1,
        day: date.getUTCDate(),
        hour: date.getUTCHours(),
        min: date.getUTCMinutes(),
        sec: date.getUTCSeconds(),
    });
}
exports.fromDate = fromDate;
function fromYearOfDay(year, dayOfYear) {
    var time = utils_1.timeCalc.dayOfYear2time(year, dayOfYear);
    return new TimeOfInterest_1.default(time);
}
exports.fromYearOfDay = fromYearOfDay;
function fromJulianDay(jd) {
    var time = utils_1.timeCalc.julianDay2time(jd);
    return new TimeOfInterest_1.default(time);
}
exports.fromJulianDay = fromJulianDay;
function fromJulianCenturiesJ2000(T) {
    var jd = utils_1.timeCalc.julianCenturiesJ20002julianDay(T);
    var time = utils_1.timeCalc.julianDay2time(jd);
    return new TimeOfInterest_1.default(time);
}
exports.fromJulianCenturiesJ2000 = fromJulianCenturiesJ2000;
